name: aioipfs-build

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        flake8 aioipfs tests --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: wget
      uses: wei/wget@v1
      with:
        args: -O kubo_linux-amd64.tar.gz https://dist.ipfs.tech/kubo/v0.14.0/kubo_v0.14.0_linux-amd64.tar.gz

    - name: extract
      run: |
        tar -C $GITHUB_WORKSPACE -xzvf kubo_linux-amd64.tar.gz
        echo "${GITHUB_WORKSPACE}/go-ipfs" >> $GITHUB_PATH

    - name: Test with pytest
      run: |
        pytest -v -s tests

    - name: Build wheel
      run: |
        python setup.py sdist bdist_wheel

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Build wheel
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -r requirements.txt
        python setup.py sdist bdist_wheel

    - name: Upload to PyPI
      if:
        contains('
          refs/heads/master
          refs/tags/v
        ', github.ref)
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine
        twine upload dist/*
